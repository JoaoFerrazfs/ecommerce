<?php

namespace Src\App\Models;

use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
use Src\Config\Sql;
use Exception;

class Product extends Model
{
    public static function listAll()
    {
        $sql = new Sql();
        $results = $sql->select('SELECT * FROM tb_products ORDER BY desproduct');
        return $results;

    }
    public function save()
    {
        $sql = new Sql();

        $results = $sql->select('Call sp_products_save(:idproduct, :desproduct, :vlprice, :vlwidth, 
        :vlheight, :vllength, :vlweight, :desurl, :desphoto )',
            array(
            ':idproduct' => $this->getidproduct(),
            ':desproduct' => $this->getdesproduct(),
            ':vlprice'=>$this->getvlprice(),
            ':vlwidth' =>$this->getvlwidth(),
            ':vlheight' =>$this->getvlheight(),
            ':vllength' =>$this->getvllength(),
            ':vlweight' =>$this->getvlweight(),
            ':desurl' =>$this->getdesurl(),
                ':desphoto' => $this->getdesphoto(),
        ));

        $this->setData($results[0]);

    }

    public function get($idProduct)
    {
        $sql = new Sql();

        $results = $sql->select('SELECT * FROM tb_products where idproduct = :idProduct ',array(
            ':idProduct' => $idProduct
        ));

        $this->setData($results[0]);
    }

    public function delete()
    {
        $sql = new Sql();

        $sql->query('DELETE FROM tb_categories WHERE idproduct = :idProduct', array(
            ':idProduct' => $this->getidproduct()
        ));
    }

    public function checkPhoto()
    {
        if(!file_exists('/Src/resources/img/products/'.$this->getnamedesphoto()) && $this->getnamedesphoto() !== null )
        {
            $url =  '/Src/resources/img/products/'.$this->getnamedesphoto();
        }else
        {
            $url =   '/Src/resources/img/products/product.jpg';
        }


        return $this->setdesphoto($url);
    }

    public function getValues()
    {
        $values =  parent::getValues(); // TODO: Change the autogenerated stub
        return $values;
    }

    public function setPhoto($file)
    {
       $name =  explode('.', $file['name']);
       $uploadDirImage = 'Src/resources/img/products/';

       if (!$file['name'] == null) {

           switch ($name[1]) {
               case 'png':
                   $imagem = imagecreatefrompng($file['tmp_name']);
                   $w = imagesx($imagem);
                   $h = imagesy($imagem);
                   $temp = imagecreatetruecolor(280, 204);
                   imagecopyresized($temp, $imagem, 0, 0, 0, 0, 280, 280, $w, $h);
                   imagejpeg($temp, $uploadDirImage . $name[0] . '.jpg', 90);
                   imagedestroy($imagem);
                   imagedestroy($temp);
                   break;

               case 'webp':
                   $imagem = imagecreatefromwebp($file['tmp_name']);
                   $w = imagesx($imagem);
                   $h = imagesy($imagem);
                   $temp = imagecreatetruecolor(280, 204);
                   imagecopyresized($temp, $imagem, 0, 0, 0, 0, 280, 280, $w, $h);
                   imagejpeg($temp, $uploadDirImage . $name[0] . '.jpg', 90);
                   imagedestroy($imagem);
                   imagedestroy($temp);
                   break;
               default:
                   $imagem = imagecreatefromjpeg($file['tmp_name']);
                   $w = imagesx($imagem);
                   $h = imagesy($imagem);
                   $temp = imagecreatetruecolor(280, 204);
                   imagecopyresized($temp, $imagem, 0, 0, 0, 0, 280, 280, $w, $h);
                   imagejpeg($temp, $uploadDirImage . $name[0] . '.jpg', 90);
                   imagedestroy($imagem);
                   imagedestroy($temp);
                   break;


           }

        $this->setnamedesphoto($name[0] . '.jpg');

       }
       $this->checkPhoto();

    }


}